# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class MenstrualFlowEntryFlow(str, enum.Enum):
    """
    ℹ️ This enum is non-exhaustive.
    """

    UNSPECIFIED = "unspecified"
    NONE = "none"
    LIGHT = "light"
    MEDIUM = "medium"
    HEAVY = "heavy"

    def visit(
        self,
        unspecified: typing.Callable[[], T_Result],
        none: typing.Callable[[], T_Result],
        light: typing.Callable[[], T_Result],
        medium: typing.Callable[[], T_Result],
        heavy: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is MenstrualFlowEntryFlow.UNSPECIFIED:
            return unspecified()
        if self is MenstrualFlowEntryFlow.NONE:
            return none()
        if self is MenstrualFlowEntryFlow.LIGHT:
            return light()
        if self is MenstrualFlowEntryFlow.MEDIUM:
            return medium()
        if self is MenstrualFlowEntryFlow.HEAVY:
            return heavy()
