# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .client_facing_provider import ClientFacingProvider


class ConnectedSourceClientFacing(UniversalBaseModel):
    provider: ClientFacingProvider = pydantic.Field()
    """
    The provider of this connected source.
    """

    created_on: dt.datetime = pydantic.Field()
    """
    When your item is created
    """

    source: ClientFacingProvider = pydantic.Field()
    """
    Deprecated. Use `provider` instead. Subject to removal after 1 Jan 2024.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
