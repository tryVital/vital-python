# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .client_facing_device_source_type import ClientFacingDeviceSourceType


class ClientFacingDevice(UniversalBaseModel):
    id: str
    user_id: str
    provider: str
    source_type: ClientFacingDeviceSourceType = pydantic.Field()
    """
    ℹ️ This enum is non-exhaustive.
    """

    app_id: typing.Optional[str] = None
    device_manufacturer: typing.Optional[str] = None
    device_model: typing.Optional[str] = None
    device_version: typing.Optional[str] = None
    device_id: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
