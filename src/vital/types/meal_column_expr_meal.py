# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class MealColumnExprMeal(str, enum.Enum):
    """
    ℹ️ This enum is non-exhaustive.
    """

    CALORIES = "calories"
    CARBOHYDRATE_GRAM = "carbohydrate_gram"
    PROTEIN_GRAM = "protein_gram"
    ALCOHOL_GRAM = "alcohol_gram"
    WATER_GRAM = "water_gram"
    FIBRE_GRAM = "fibre_gram"
    SUGAR_GRAM = "sugar_gram"
    CHOLESTEROL_GRAM = "cholesterol_gram"
    SATURATED_FAT_GRAM = "saturated_fat_gram"
    MONOUNSATURATED_FAT_GRAM = "monounsaturated_fat_gram"
    POLYUNSATURATED_FAT_GRAM = "polyunsaturated_fat_gram"
    OMEGA_3_FAT_GRAM = "omega3_fat_gram"
    OMEGA_6_FAT_GRAM = "omega6_fat_gram"
    TOTAL_FAT_GRAM = "total_fat_gram"
    SODIUM_MILLIGRAM = "sodium_milligram"
    POTASSIUM_MILLIGRAM = "potassium_milligram"
    CALCIUM_MILLIGRAM = "calcium_milligram"
    PHOSPHORUS_MILLIGRAM = "phosphorus_milligram"
    MAGNESIUM_MILLIGRAM = "magnesium_milligram"
    IRON_MILLIGRAM = "iron_milligram"
    ZINC_MILLIGRAM = "zinc_milligram"
    FLUORIDE_MILLIGRAM = "fluoride_milligram"
    CHLORIDE_MILLIGRAM = "chloride_milligram"
    VITAMIN_A_MILLIGRAM = "vitamin_a_milligram"
    VITAMIN_B_1_MILLIGRAM = "vitamin_b1_milligram"
    RIBOFLAVIN_MILLIGRAM = "riboflavin_milligram"
    NIACIN_MILLIGRAM = "niacin_milligram"
    PANTOTHENIC_ACID_MILLIGRAM = "pantothenic_acid_milligram"
    VITAMIN_B_6_MILLIGRAM = "vitamin_b6_milligram"
    BIOTIN_MICROGRAM = "biotin_microgram"
    VITAMIN_B_12_MICROGRAM = "vitamin_b12_microgram"
    VITAMIN_C_MILLIGRAM = "vitamin_c_milligram"
    VITAMIN_D_MICROGRAM = "vitamin_d_microgram"
    VITAMIN_E_MILLIGRAM = "vitamin_e_milligram"
    VITAMIN_K_MICROGRAM = "vitamin_k_microgram"
    FOLIC_ACID_MICROGRAM = "folic_acid_microgram"
    CHROMIUM_MICROGRAM = "chromium_microgram"
    COPPER_MILLIGRAM = "copper_milligram"
    IODINE_MICROGRAM = "iodine_microgram"
    MANGANESE_MILLIGRAM = "manganese_milligram"
    MOLYBDENUM_MICROGRAM = "molybdenum_microgram"
    SELENIUM_MICROGRAM = "selenium_microgram"
    DATE = "date"
    NAME = "name"
    SOURCE_TYPE = "source_type"
    SOURCE_PROVIDER = "source_provider"
    SOURCE_APP_ID = "source_app_id"
    _UNKNOWN = "__MEALCOLUMNEXPRMEAL_UNKNOWN__"
    """
    This member is used for forward compatibility. If the value is not recognized by the enum, it will be stored here, and the raw value is accessible through `.value`.
    """

    @classmethod
    def _missing_(cls, value: typing.Any) -> "MealColumnExprMeal":
        unknown = cls._UNKNOWN
        unknown._value_ = value
        return unknown

    def visit(
        self,
        calories: typing.Callable[[], T_Result],
        carbohydrate_gram: typing.Callable[[], T_Result],
        protein_gram: typing.Callable[[], T_Result],
        alcohol_gram: typing.Callable[[], T_Result],
        water_gram: typing.Callable[[], T_Result],
        fibre_gram: typing.Callable[[], T_Result],
        sugar_gram: typing.Callable[[], T_Result],
        cholesterol_gram: typing.Callable[[], T_Result],
        saturated_fat_gram: typing.Callable[[], T_Result],
        monounsaturated_fat_gram: typing.Callable[[], T_Result],
        polyunsaturated_fat_gram: typing.Callable[[], T_Result],
        omega_3_fat_gram: typing.Callable[[], T_Result],
        omega_6_fat_gram: typing.Callable[[], T_Result],
        total_fat_gram: typing.Callable[[], T_Result],
        sodium_milligram: typing.Callable[[], T_Result],
        potassium_milligram: typing.Callable[[], T_Result],
        calcium_milligram: typing.Callable[[], T_Result],
        phosphorus_milligram: typing.Callable[[], T_Result],
        magnesium_milligram: typing.Callable[[], T_Result],
        iron_milligram: typing.Callable[[], T_Result],
        zinc_milligram: typing.Callable[[], T_Result],
        fluoride_milligram: typing.Callable[[], T_Result],
        chloride_milligram: typing.Callable[[], T_Result],
        vitamin_a_milligram: typing.Callable[[], T_Result],
        vitamin_b_1_milligram: typing.Callable[[], T_Result],
        riboflavin_milligram: typing.Callable[[], T_Result],
        niacin_milligram: typing.Callable[[], T_Result],
        pantothenic_acid_milligram: typing.Callable[[], T_Result],
        vitamin_b_6_milligram: typing.Callable[[], T_Result],
        biotin_microgram: typing.Callable[[], T_Result],
        vitamin_b_12_microgram: typing.Callable[[], T_Result],
        vitamin_c_milligram: typing.Callable[[], T_Result],
        vitamin_d_microgram: typing.Callable[[], T_Result],
        vitamin_e_milligram: typing.Callable[[], T_Result],
        vitamin_k_microgram: typing.Callable[[], T_Result],
        folic_acid_microgram: typing.Callable[[], T_Result],
        chromium_microgram: typing.Callable[[], T_Result],
        copper_milligram: typing.Callable[[], T_Result],
        iodine_microgram: typing.Callable[[], T_Result],
        manganese_milligram: typing.Callable[[], T_Result],
        molybdenum_microgram: typing.Callable[[], T_Result],
        selenium_microgram: typing.Callable[[], T_Result],
        date: typing.Callable[[], T_Result],
        name: typing.Callable[[], T_Result],
        source_type: typing.Callable[[], T_Result],
        source_provider: typing.Callable[[], T_Result],
        source_app_id: typing.Callable[[], T_Result],
        _unknown_member: typing.Callable[[str], T_Result],
    ) -> T_Result:
        if self is MealColumnExprMeal.CALORIES:
            return calories()
        if self is MealColumnExprMeal.CARBOHYDRATE_GRAM:
            return carbohydrate_gram()
        if self is MealColumnExprMeal.PROTEIN_GRAM:
            return protein_gram()
        if self is MealColumnExprMeal.ALCOHOL_GRAM:
            return alcohol_gram()
        if self is MealColumnExprMeal.WATER_GRAM:
            return water_gram()
        if self is MealColumnExprMeal.FIBRE_GRAM:
            return fibre_gram()
        if self is MealColumnExprMeal.SUGAR_GRAM:
            return sugar_gram()
        if self is MealColumnExprMeal.CHOLESTEROL_GRAM:
            return cholesterol_gram()
        if self is MealColumnExprMeal.SATURATED_FAT_GRAM:
            return saturated_fat_gram()
        if self is MealColumnExprMeal.MONOUNSATURATED_FAT_GRAM:
            return monounsaturated_fat_gram()
        if self is MealColumnExprMeal.POLYUNSATURATED_FAT_GRAM:
            return polyunsaturated_fat_gram()
        if self is MealColumnExprMeal.OMEGA_3_FAT_GRAM:
            return omega_3_fat_gram()
        if self is MealColumnExprMeal.OMEGA_6_FAT_GRAM:
            return omega_6_fat_gram()
        if self is MealColumnExprMeal.TOTAL_FAT_GRAM:
            return total_fat_gram()
        if self is MealColumnExprMeal.SODIUM_MILLIGRAM:
            return sodium_milligram()
        if self is MealColumnExprMeal.POTASSIUM_MILLIGRAM:
            return potassium_milligram()
        if self is MealColumnExprMeal.CALCIUM_MILLIGRAM:
            return calcium_milligram()
        if self is MealColumnExprMeal.PHOSPHORUS_MILLIGRAM:
            return phosphorus_milligram()
        if self is MealColumnExprMeal.MAGNESIUM_MILLIGRAM:
            return magnesium_milligram()
        if self is MealColumnExprMeal.IRON_MILLIGRAM:
            return iron_milligram()
        if self is MealColumnExprMeal.ZINC_MILLIGRAM:
            return zinc_milligram()
        if self is MealColumnExprMeal.FLUORIDE_MILLIGRAM:
            return fluoride_milligram()
        if self is MealColumnExprMeal.CHLORIDE_MILLIGRAM:
            return chloride_milligram()
        if self is MealColumnExprMeal.VITAMIN_A_MILLIGRAM:
            return vitamin_a_milligram()
        if self is MealColumnExprMeal.VITAMIN_B_1_MILLIGRAM:
            return vitamin_b_1_milligram()
        if self is MealColumnExprMeal.RIBOFLAVIN_MILLIGRAM:
            return riboflavin_milligram()
        if self is MealColumnExprMeal.NIACIN_MILLIGRAM:
            return niacin_milligram()
        if self is MealColumnExprMeal.PANTOTHENIC_ACID_MILLIGRAM:
            return pantothenic_acid_milligram()
        if self is MealColumnExprMeal.VITAMIN_B_6_MILLIGRAM:
            return vitamin_b_6_milligram()
        if self is MealColumnExprMeal.BIOTIN_MICROGRAM:
            return biotin_microgram()
        if self is MealColumnExprMeal.VITAMIN_B_12_MICROGRAM:
            return vitamin_b_12_microgram()
        if self is MealColumnExprMeal.VITAMIN_C_MILLIGRAM:
            return vitamin_c_milligram()
        if self is MealColumnExprMeal.VITAMIN_D_MICROGRAM:
            return vitamin_d_microgram()
        if self is MealColumnExprMeal.VITAMIN_E_MILLIGRAM:
            return vitamin_e_milligram()
        if self is MealColumnExprMeal.VITAMIN_K_MICROGRAM:
            return vitamin_k_microgram()
        if self is MealColumnExprMeal.FOLIC_ACID_MICROGRAM:
            return folic_acid_microgram()
        if self is MealColumnExprMeal.CHROMIUM_MICROGRAM:
            return chromium_microgram()
        if self is MealColumnExprMeal.COPPER_MILLIGRAM:
            return copper_milligram()
        if self is MealColumnExprMeal.IODINE_MICROGRAM:
            return iodine_microgram()
        if self is MealColumnExprMeal.MANGANESE_MILLIGRAM:
            return manganese_milligram()
        if self is MealColumnExprMeal.MOLYBDENUM_MICROGRAM:
            return molybdenum_microgram()
        if self is MealColumnExprMeal.SELENIUM_MICROGRAM:
            return selenium_microgram()
        if self is MealColumnExprMeal.DATE:
            return date()
        if self is MealColumnExprMeal.NAME:
            return name()
        if self is MealColumnExprMeal.SOURCE_TYPE:
            return source_type()
        if self is MealColumnExprMeal.SOURCE_PROVIDER:
            return source_provider()
        if self is MealColumnExprMeal.SOURCE_APP_ID:
            return source_app_id()
        return _unknown_member(self._value_)
