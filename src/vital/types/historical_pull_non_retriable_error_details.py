# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class HistoricalPullNonRetriableErrorDetails(str, enum.Enum):
    """
    ℹ️ This enum is non-exhaustive.
    """

    NON_RETRIABLE_ERROR = "non_retriable_error"
    UNEXPECTED_ERROR = "unexpected_error"
    RETRY_QUOTA_EXHAUSTED = "retry_quota_exhausted"

    def visit(
        self,
        non_retriable_error: typing.Callable[[], T_Result],
        unexpected_error: typing.Callable[[], T_Result],
        retry_quota_exhausted: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is HistoricalPullNonRetriableErrorDetails.NON_RETRIABLE_ERROR:
            return non_retriable_error()
        if self is HistoricalPullNonRetriableErrorDetails.UNEXPECTED_ERROR:
            return unexpected_error()
        if self is HistoricalPullNonRetriableErrorDetails.RETRY_QUOTA_EXHAUSTED:
            return retry_quota_exhausted()
