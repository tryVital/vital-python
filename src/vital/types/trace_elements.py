# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class TraceElements(str, enum.Enum):
    """
    ℹ️ This enum is non-exhaustive.
    """

    CHROMIUM = "chromium"
    COPPER = "copper"
    IODINE = "iodine"
    MANGANESE = "manganese"
    MOLYBDENUM = "molybdenum"
    SELENIUM = "selenium"

    def visit(
        self,
        chromium: typing.Callable[[], T_Result],
        copper: typing.Callable[[], T_Result],
        iodine: typing.Callable[[], T_Result],
        manganese: typing.Callable[[], T_Result],
        molybdenum: typing.Callable[[], T_Result],
        selenium: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is TraceElements.CHROMIUM:
            return chromium()
        if self is TraceElements.COPPER:
            return copper()
        if self is TraceElements.IODINE:
            return iodine()
        if self is TraceElements.MANGANESE:
            return manganese()
        if self is TraceElements.MOLYBDENUM:
            return molybdenum()
        if self is TraceElements.SELENIUM:
            return selenium()
