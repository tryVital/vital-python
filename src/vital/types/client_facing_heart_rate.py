# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ClientFacingHeartRate(UniversalBaseModel):
    avg_bpm: typing.Optional[float] = pydantic.Field(default=None)
    """
    Average heart rate::bpm
    """

    min_bpm: typing.Optional[float] = pydantic.Field(default=None)
    """
    Minimum heart rate::bpm
    """

    max_bpm: typing.Optional[float] = pydantic.Field(default=None)
    """
    Maximum heart rate::bpm
    """

    resting_bpm: typing.Optional[float] = pydantic.Field(default=None)
    """
    Resting heart rate::bpm
    """

    avg_walking_bpm: typing.Optional[float] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
