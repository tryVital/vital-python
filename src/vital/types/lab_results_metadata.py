# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class LabResultsMetadata(UniversalBaseModel):
    age: str
    dob: str
    clia: typing.Optional[str] = pydantic.Field(alias="clia_#", default=None)
    patient: str
    provider: typing.Optional[str] = None
    laboratory: typing.Optional[str] = None
    date_reported: str
    date_collected: typing.Optional[str] = None
    specimen_number: str
    date_received: typing.Optional[str] = None
    status: typing.Optional[str] = None
    interpretation: typing.Optional[str] = None
    patient_id: typing.Optional[str] = None
    account_id: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
